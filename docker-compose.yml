version: "3.9"
services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/ssl:/ssl"
    networks:
      - pscapi
      - galerieapi

  pscapi:
    build: .
    restart: unless-stopped
    tty: true
    environment:
      JWT_KEY: ${PSC_JWT_KEY}
      DB_PASSWORD: ${PSC_DB_PASSWORD}
      PORT: 8080
      DB_HOST: pscdb
      DB_PORT: 5432
      DB_USER: api
      DB_NAME: api
      DB_SSLMODE: disable
      GIN_MODE: release
    ports:
      - ${PSC_PORT}:8080
    depends_on:
      - pscdb
    networks:
      - pscapi

  galerieapi:
    build: .
    restart: unless-stopped
    tty: true
    environment:
      JWT_KEY: ${GALERIE_JWT_KEY}
      DB_PASSWORD: ${GALERIE_DB_PASSWORD}
      PORT: 8080
      DB_HOST: galeriedb
      DB_PORT: 5432
      DB_USER: api
      DB_NAME: api
      DB_SSLMODE: disable
      GIN_MODE: release
    ports:
      - ${GALERIE_PORT}:8080
    depends_on:
      - galeriedb
    networks:
      - galerieapi

  pscdb:
    image: postgres:13.2-alpine
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_DB: api
      POSTGRES_USER: api
      POSTGRES_PASSWORD: ${PSC_DB_PASSWORD}
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    volumes:
      - "pscdb:/data/postgres"
    networks:
      - pscapi

  galeriedb:
    image: postgres:13.2-alpine
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_DB: api
      POSTGRES_USER: api
      POSTGRES_PASSWORD: ${GALERIE_DB_PASSWORD}
      PGDATA: /data/postgres
    ports:
      - 5433:5432
    volumes:
      - "galeriedb:/data/postgres"
    networks:
      - galerieapi

volumes:
  pscdb:
  galeriedb:

networks:
  pscapi:
    driver: bridge
  galerieapi:
    driver: bridge
